// Mocks generated by Mockito 5.4.5 from annotations
// in inc_project/test/domain/usecases/save_favorite_ids_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fpdart/fpdart.dart' as _i4;
import 'package:inc_project/core/error/failures.dart' as _i5;
import 'package:inc_project/features/articles/domain/entities/article.dart'
    as _i6;
import 'package:inc_project/features/articles/domain/repositories/article_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ArticleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleRepository extends _i1.Mock implements _i2.ArticleRepository {
  MockArticleRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.Article>>> getArticles({
    required int? page,
    required int? pageSize,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getArticles, [], {
              #page: page,
              #pageSize: pageSize,
            }),
            returnValue:
                _i3.Future<_i4.Either<_i5.Failure, List<_i6.Article>>>.value(
                  _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.Article>>>(
                    this,
                    Invocation.method(#getArticles, [], {
                      #page: page,
                      #pageSize: pageSize,
                    }),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, List<_i6.Article>>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>> toggleFavorite(
    String? articleId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#toggleFavorite, [articleId]),
            returnValue: _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>.value(
              _i7.dummyValue<_i4.Either<_i5.Failure, _i4.Unit>>(
                this,
                Invocation.method(#toggleFavorite, [articleId]),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, List<String>>> getFavoriteIds() =>
      (super.noSuchMethod(
            Invocation.method(#getFavoriteIds, []),
            returnValue:
                _i3.Future<_i4.Either<_i5.Failure, List<String>>>.value(
                  _i7.dummyValue<_i4.Either<_i5.Failure, List<String>>>(
                    this,
                    Invocation.method(#getFavoriteIds, []),
                  ),
                ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, List<String>>>);

  @override
  _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>> saveFavoriteIds(
    List<String>? favoriteIds,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveFavoriteIds, [favoriteIds]),
            returnValue: _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>.value(
              _i7.dummyValue<_i4.Either<_i5.Failure, _i4.Unit>>(
                this,
                Invocation.method(#saveFavoriteIds, [favoriteIds]),
              ),
            ),
          )
          as _i3.Future<_i4.Either<_i5.Failure, _i4.Unit>>);
}
